version: '3'

services:
  api:
    container_name: api
    image: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: ./start.sh
    env_file:
      - .env
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - pg
      - kafka
    volumes:
      - ./backend/alembic/versions:/alembic/versions

  # redis:
  #   image: redis:latest
  #   restart: always
  #   ports:
  #     - ${REDIS_PORT}:${REDIS_PORT}
  #   volumes:
  #     - ./redis/data:/root/redis
  #     - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
  #   command: [ 'redis-server', '--requirepass', '${REDIS_PASSWORD}' ]
  #   env_file:
  #     - .env

  pg:
    container_name: pg
    image: postgres:latest
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  pgadmin4:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - pg

  # zookeeper:
  #   image: zookeeper
  #   hostname: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_PORT: 2181
  #     ZOO_SERVERS: server.1=zookeeper:2888:3888;2181
  #   # volumes:
  #   #   - ./data/zookeeper/data:/data
  #   #   - ./data/zookeeper/datalog:/datalog

  # kafka:
  #   image: bitnami/kafka
  #   hostname: kafka
  #   ports:
  #     - "9091:9091"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_CLUSTER_ID: i7DivAfCTKC58UAp_FIfcQ
  #     KAFKA_CFG_LISTENERS: INTERNAL://kafka:19091,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19091,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_CFG_NODE_ID: 1
  #     KAFKA_ENABLE_KRAFT: yes
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "main-topic:1:1"
  #     KAFKA_CFG_PROCESS_ROLES: broker
  #     KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
  #   volumes:
  #     - ./kafka_data:/bitnami/kafka
  #   depends_on:
  #     - zookeeper
    
  kafka:
    image: bitnami/kafka:latest
    hostname: kafka
    ports:
      - "9091:9091"
    environment:
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9091,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9091
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CLUSTER_ID: i7DivAfCTKC58UAp_FIfcQ
    volumes:
      - ./kafka_data:/bitnami/kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9091"
    depends_on:
      - kafka

  tg:
    container_name: tg
    image: tg
    build:
      context: ./telegram_client
      dockerfile: Dockerfile
    entrypoint: ./start.sh
    env_file:
      - .env
    depends_on:
      - pg
      - kafka

  email:
    container_name: email
    image: email
    build:
      context: ./email_client
      dockerfile: Dockerfile
    entrypoint: ./start.sh
    env_file:
      - .env
    depends_on:
      - pg
      - kafka

